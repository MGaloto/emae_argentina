0:GET(url,
0:timeout(time_out),
0:write_disk(file <- tempfile(fileext = ".xls")))
0:emae = read_excel(file)
0:if (grepl("mensual", url)) {
0:emae = emae[7:nrow(emae) - 2,3]
0:colnames(emae) = "emae"
0:emae = na.omit(emae)
0:emae = convert_integer(emae)
0:dataframe = emae %>%
0:mutate_if(is.numeric, round)
0:} else {
0:emae = emae[4:nrow(emae) - 2,]
0:colnames(emae) = emae[1,]
0:emae = emae[4:nrow(emae), 3:ncol(emae)]
0:emae = na.omit(emae)
0:emae = convert_integer(emae)
0:colnames(emae) = c("agricultura_ganaderia",
0:"pesca",
0:"mineria",
0:"industria_manufactura",
0:"electricidad_gas_agua",
0:"construccion",
0:"comercio",
0:"hoteles_restaurantes",
0:"transporte_comunicaciones",
0:"intermediacion_financiera",
0:"inmobiliarias",
0:"adm_publica",
0:"enseñanza",
0:"serv_sociales_salud",
0:"serv_comunitarios_sociales",
0:"impuestos_neto_subsidios")
0:periodos = seq(as.Date("2004/1/1"),
0:by = "month",
0:length.out = nrow(emae))
0:emae$periodos = as.Date(periodos)
0:emae$year     = year(emae$periodos)
0:emae$Mes      = as.numeric(substr(emae$periodos, 6 , 7))
0:dataframe = emae %>%
0:mutate_if(is.numeric, round)
0:}
0:return(dataframe)
0:}
0:url_sectors = "https://www.indec.gob.ar/ftp/cuadros/economia/sh_emae_actividad_base2004.xls"
0:url = "https://www.indec.gob.ar/ftp/cuadros/economia/sh_emae_mensual_base2004.xls"
0:df_emae = get_dataframe(url = url, time_out = 20000)
0:dataframe = get_dataframe(url = url_sectors, time_out = 20000)
0:View(df_emae)
0:GET(url,
0:timeout(20000),
0:write_disk(file <- tempfile(fileext = ".xls")))
0:library(tidyverse)
0:library(lubridate)
0:library(readxl)
0:library(readr)
0:library(httr)
0:convert_integer = function(dataframe) {
0:dataframe[ , c(1:(ncol(dataframe)))] = apply(dataframe[ , c(1:(ncol(dataframe)))], 2,
0:function(x) as.numeric(as.character(x)))
0:return(
0:dataframe
0:)
0:}
0:GET(url,
0:timeout(20000),
0:write_disk(file <- tempfile(fileext = ".xls")))
0:emae = read_excel(file)
0:url = "https://www.indec.gob.ar/ftp/cuadros/economia/sh_emae_mensual_base2004.xls"
0:GET(url,
0:timeout(20000),
0:write_disk(file <- tempfile(fileext = ".xls")))
0:emae = read_excel(file)
0:get_dataframe = function(url, time_out){
0:GET(url,
0:timeout(time_out),
0:write_disk(file <- tempfile(fileext = ".xls")))
0:read_excel(file)
0:}
0:emae = get_dataframe(url, 200000)
0:get_dataframe = function(url, time_out){
0:GET(url,
0:timeout(time_out),
0:write_disk(file <- tempfile(fileext = ".xls")))
0:read_excel(file)
0:}
0:emae = get_dataframe(url, 200000)
0:emae = emae[7:nrow(emae) - 2,3]
0:emae = get_dataframe(url, 200000)
0:emae = emae[6:nrow(emae) - 2,3]
0:View(emae)
0:# "bootstrap", "cerulean", "cosmo", "darkly", "flatly", "journal", "lumen", "", "", "spacelab",
0:# logo: https://convert-my-image.com/ImageConverter
0:library(flexdashboard)
0:library(dplyr)
0:library(tidyverse)
0:library(highcharter)
0:library(rlang)
0:source('download_emae.R')
0:#dataframe = readxl::read_excel("df.xlsx")
0:colnames(dataframe)[13] = "ensenianza"
0:interanual <-    function(df, val)  {
0:valueuno = pull((df[,c(val)]))[nrow(df) - 12]
0:valuedos = pull((df[,c(val)]))[nrow(df)]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:return(porcentaje)
0:}
0:most_interanual = function(df){
0:col_names = colnames(df)[1:16]
0:counter = 0
0:values = c()
0:names = c()
0:for (col in col_names){
0:counter = counter + 1
0:valueuno = pull((df[,c(col)]))[nrow(df) - 12]
0:valuedos = pull((df[,c(col)]))[nrow(df)]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:values[counter] <- porcentaje
0:names[counter] <- col
0:}
0:dtf = data.frame(names,values)
0:return(dtf)
0:}
0:interanual_array <-    function(df, val)  {
0:valueuno = pull((df[,c(val)]))[nrow(df) - 12]
0:valuedos = pull((df[,c(val)]))[nrow(df)]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:return(porcentaje)
0:}
0:interanual_array <-    function(df, val)  {
0:vector_final = c()
0:counter = 0
0:for (i in 1:3) {
0:valueuno = pull((df[,c(val)]))[nrow(df) - (12 + counter)]
0:valuedos = pull((df[,c(val)]))[nrow(df) - counter]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:counter = counter + 1
0:vector_final[counter] = porcentaje
0:}
0:value_final = vector_final[1] - vector_final[2] - vector_final[3]
0:return(value_final)
0:}
0:tibble_economy = function(df, colnames){
0:colname = c()
0:value = c()
0:counter = 0
0:for (col in colnames){
0:counter = counter + 1
0:colname[counter] = col
0:value[counter] = interanual_array(df, col)
0:}
0:return(tibble(actividad = colname, numbers = value))
0:}
0:valuebox = function(porcentaje, name, mensaje, color, font) {
0:valueBox(
0:value = tags$p(paste0(porcentaje, ' %'),
0:style = color),
0:icon = "fa-line-chart",
0:caption = tags$p(paste0(mensaje, ' variacion Interanual: ',str_to_title(gsub("_", " ", name))),
0:style = font),
0:color =  color)
0:}
0:valueboxTwo = function(descripcion, name, color, font, font_letter,icon) {
0:valueBox(
0:value = tags$p(str_to_title(gsub("_", " ", name)),
0:style = font_letter),
0:icon = icon,
0:caption = tags$p(paste0(str_to_title(gsub("_", " ", descripcion))),
0:style = font),
0:color =  color)
0:}
0:time_serie_plot = function(data, name){
0:highcharter::hchart(
0:data, type = "line",  highcharter::hcaes(x = as.Date(periodos), y = !!sym(name)),
0:color = "rgba(29, 53, 87, 1)",
0:name = str_to_title(gsub("_", " ", name)),
0:id = "trend",
0:showInLegend = TRUE) %>%
0:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Base: {point.y}") %>%
0:highcharter::hc_plotOptions(
0:line = list(
0:color = "blue",
0:marker = list(
0:fillColor = "white",
0:lineWidth = 2,
0:radius=1,
0:lineColor = NULL
0:)
0:)
0:) %>%
0:highcharter::hc_legend(
0:layout = "vertical",
0:verticalAlign = "top",
0:align = "right",
0:floating = TRUE
0:) %>%
0:highcharter::hc_xAxis(
0:title = list(text = ""),
0:gridLineWidth = 0,
0:dateTimeLabelFormats = list(day = '%d/%m/%Y'),
0:type = "datetime",
0:reversed = FALSE
0:) %>%
0:highcharter::hc_yAxis(
0:title = list(text = str_to_title(gsub("_", " ", name))),
0:gridLineWidth = 0,
0:reversed = FALSE
0:) %>%
0:highcharter::hc_caption(
0:text = paste0("Serie Temporal de EMAE. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
0:highcharter::hc_tooltip(
0:crosshairs = TRUE,
0:backgroundColor = "#F0F0F0",
0:shared = TRUE,
0:borderWidth = 5
0:)
0:}
0:dtfs = most_interanual(dataframe)
0:data = tibble_economy(df= dataframe, colnames = colnames(dataframe)[c(1:16, 20)])
0:colnames(dataframe)
0:View(dtfs)
0:View(data)
0:View(dataframe)
0:Sys.time()
0:as.POSIXlt(Sys.time(), tz = "UTC")
0:as.POSIXct.Date(Sys.time(), tz = "UTC")
0:as.POSIXlt(Sys.time(), tz = "UTC")
0:as.POSIXlt(Sys.time(), tz = "UTC - 3")
0:as.POSIXlt(Sys.time(), tz = "UTC-3")
0:as.POSIXlt(Sys.time(), tz = "UTC")
0:as.POSIXct(Sys.time(), tz = "UTC")
0:as.POSIXct(Sys.time(), tz = "UTC", format="%m/%d/%Y %H:%M:%S")
0:as.POSIXct(Sys.time(), tz = "UTC")
0:as.POSIXct(Sys.time(), tz = "UTC")
0:Sys.time()
0:Sys.time()
0:library(flexdashboard)
0:library(dplyr)
0:library(tidyverse)
0:library(highcharter)
0:library(rlang)
0:str_to_title("hola")
0:# "bootstrap", "cerulean", "cosmo", "darkly", "flatly", "journal", "lumen", "", "", "spacelab",
0:# logo: https://convert-my-image.com/ImageConverter
0:library(flexdashboard)
0:library(dplyr)
0:library(tidyverse)
0:library(highcharter)
0:library(rlang)
0:source('download_emae.R')
0:#dataframe = readxl::read_excel("df.xlsx")
0:colnames(dataframe)[13] = "ensenianza"
0:interanual <-    function(df, val)  {
0:valueuno = pull((df[,c(val)]))[nrow(df) - 12]
0:valuedos = pull((df[,c(val)]))[nrow(df)]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:return(porcentaje)
0:}
0:most_interanual = function(df){
0:col_names = colnames(df)[1:16]
0:counter = 0
0:values = c()
0:names = c()
0:for (col in col_names){
0:counter = counter + 1
0:valueuno = pull((df[,c(col)]))[nrow(df) - 12]
0:valuedos = pull((df[,c(col)]))[nrow(df)]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:values[counter] <- porcentaje
0:names[counter] <- col
0:}
0:dtf = data.frame(names,values)
0:return(dtf)
0:}
0:interanual_array <-    function(df, val)  {
0:valueuno = pull((df[,c(val)]))[nrow(df) - 12]
0:valuedos = pull((df[,c(val)]))[nrow(df)]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:return(porcentaje)
0:}
0:interanual_array <-    function(df, val)  {
0:vector_final = c()
0:counter = 0
0:for (i in 1:3) {
0:valueuno = pull((df[,c(val)]))[nrow(df) - (12 + counter)]
0:valuedos = pull((df[,c(val)]))[nrow(df) - counter]
0:porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
0:counter = counter + 1
0:vector_final[counter] = porcentaje
0:}
0:value_final = vector_final[1] - vector_final[2] - vector_final[3]
0:return(value_final)
0:}
0:tibble_economy = function(df, colnames){
0:colname = c()
0:value = c()
0:counter = 0
0:for (col in colnames){
0:counter = counter + 1
0:colname[counter] = col
0:value[counter] = interanual_array(df, col)
0:}
0:return(tibble(actividad = colname, numbers = value))
0:}
0:valuebox = function(porcentaje, name, mensaje, color, font) {
0:valueBox(
0:value = tags$p(paste0(porcentaje, ' %'),
0:style = color),
0:icon = "fa-line-chart",
0:caption = tags$p(paste0(mensaje, ' variacion Interanual: ',str_to_title(gsub("_", " ", name))),
0:style = font),
0:color =  color)
0:}
0:valueboxTwo = function(descripcion, name, color, font, font_letter,icon) {
0:valueBox(
0:value = tags$p(str_to_title(gsub("_", " ", name)),
0:style = font_letter),
0:icon = icon,
0:caption = tags$p(paste0(str_to_title(gsub("_", " ", descripcion))),
0:style = font),
0:color =  color)
0:}
0:time_serie_plot = function(data, name){
0:highcharter::hchart(
0:data, type = "line",  highcharter::hcaes(x = as.Date(periodos), y = !!sym(name)),
0:color = "rgba(29, 53, 87, 1)",
0:name = str_to_title(gsub("_", " ", name)),
0:id = "trend",
0:showInLegend = TRUE) %>%
0:highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Base: {point.y}") %>%
0:highcharter::hc_plotOptions(
0:line = list(
0:color = "blue",
0:marker = list(
0:fillColor = "white",
0:lineWidth = 2,
0:radius=1,
0:lineColor = NULL
0:)
0:)
0:) %>%
0:highcharter::hc_legend(
0:layout = "vertical",
0:verticalAlign = "top",
0:align = "right",
0:floating = TRUE
0:) %>%
0:highcharter::hc_xAxis(
0:title = list(text = ""),
0:gridLineWidth = 0,
0:dateTimeLabelFormats = list(day = '%d/%m/%Y'),
0:type = "datetime",
0:reversed = FALSE
0:) %>%
0:highcharter::hc_yAxis(
0:title = list(text = str_to_title(gsub("_", " ", name))),
0:gridLineWidth = 0,
0:reversed = FALSE
0:) %>%
0:highcharter::hc_caption(
0:text = paste0("Serie Temporal de EMAE. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
0:highcharter::hc_tooltip(
0:crosshairs = TRUE,
0:backgroundColor = "#F0F0F0",
0:shared = TRUE,
0:borderWidth = 5
0:)
0:}
0:dtfs = most_interanual(dataframe)
0:data = tibble_economy(df= dataframe, colnames = colnames(dataframe)[c(1:16, 20)])
0:#as.POSIXct(Sys.time(), tz = "UTC")
0:last_update = Sys.time()
0:dtfs %>%
0:arrange(desc(values)) %>%
0:hchart('column', hcaes(x = names, y = values),
0:showInLegend = F,
0:maxSize = "15%",
0:dataLabels = list(enabled = TRUE,
0:format = '{point.y} %')) %>%
0:hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
0:hc_legend(enabled = FALSE) %>%
0:highcharter::hc_plotOptions(
0:line = list(
0:color = "blue",
0:marker = list(
0:fillColor = "white",
0:lineWidth = 2,
0:radius = 1,
0:lineColor = NULL
0:)
0:)
0:) %>%
0:highcharter::hc_tooltip(crosshairs = TRUE,
0:pointFormat = "Variacion: {point.y} %",
0:backgroundColor = "#F0F0F0",
0:shared = TRUE,
0:borderWidth = 5) %>%
0:highcharter::hc_caption(
0:text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
0:highcharter::hc_xAxis(
0:title = list(text = " "),
0:gridLineWidth = 0,
0:reversed = FALSE
0:) %>%
0:highcharter::hc_yAxis(
0:title = list(text = " "),
0:gridLineWidth = 0,
0:reversed = FALSE
0:)
0:dtfs %>%
0:arrange(desc(values)) %>%
0:hchart('column', hcaes(x = names, y = values),
0:showInLegend = F,
0:maxSize = "15%",
0:dataLabels = list(enabled = TRUE,
0:format = '{point.y} %')) %>%
0:hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
0:hc_legend(enabled = FALSE) %>%
0:highcharter::hc_plotOptions(
0:line = list(
0:color = "blue",
0:marker = list(
0:fillColor = "white",
0:lineWidth = 2,
0:radius = 1,
0:lineColor = NULL
0:)
0:)
0:) %>%
0:highcharter::hc_tooltip(crosshairs = TRUE,
0:pointFormat = "Variacion: {point.y} %",
0:backgroundColor = "#F0F0F0",
0:shared = TRUE,
0:borderWidth = 5) %>%
0:highcharter::hc_caption(
0:text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec."))
0:dtfs %>%
0:arrange(desc(values)) %>%
0:hchart('column', hcaes(x = names, y = values),
0:showInLegend = F,
0:maxSize = "15%",
0:dataLabels = list(enabled = TRUE,
0:format = '{point.y} %')) %>%
0:hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
0:hc_legend(enabled = FALSE) %>%
0:highcharter::hc_plotOptions(
0:line = list(
0:color = "blue",
0:marker = list(
0:fillColor = "white",
0:lineWidth = 2,
0:radius = 1,
0:lineColor = NULL
0:)
0:)
0:) %>%
0:highcharter::hc_tooltip(crosshairs = TRUE,
0:pointFormat = "Variacion: {point.y} %",
0:backgroundColor = "#F0F0F0",
0:shared = TRUE,
0:borderWidth = 5) %>%
0:highcharter::hc_caption(
0:text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
0:highcharter::hc_xAxis(
0:title = list(text = " "),
0:gridLineWidth = 0,
0:reversed = FALSE
0:) %>%
0:highcharter::hc_yAxis(
0:title = list(text = " "),
0:gridLineWidth = 0,
0:reversed = FALSE
0:)
0:?hc_xAxis
0:dtfs %>%
0:arrange(desc(values)) %>%
0:hchart('column', hcaes(x = names, y = values),
0:showInLegend = F,
0:maxSize = "15%",
0:dataLabels = list(enabled = TRUE,
0:format = '{point.y} %')) %>%
0:hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
0:hc_legend(enabled = FALSE) %>%
0:highcharter::hc_plotOptions(
0:line = list(
0:color = "blue",
0:marker = list(
0:fillColor = "white",
0:lineWidth = 2,
0:radius = 1,
0:lineColor = NULL
0:)
0:)
0:) %>%
0:highcharter::hc_tooltip(crosshairs = TRUE,
0:pointFormat = "Variacion: {point.y} %",
0:backgroundColor = "#F0F0F0",
0:shared = TRUE,
0:borderWidth = 5) %>%
0:highcharter::hc_caption(
0:text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
0:highcharter::hc_xAxis(
0:label = list(style=list(textTransform = "uppercase")),
0:title = list(text = " "),
0:gridLineWidth = 0,
0:reversed = FALSE
0:) %>%
0:highcharter::hc_yAxis(
0:title = list(text = " "),
0:gridLineWidth = 0,
0:reversed = FALSE
0:)
1681090220920:library(flexdashboard)
1681090221512:library(dplyr)
1681090221634:library(tidyverse)
1681090228464:library(flexdashboard)
1681090228547:library(dplyr)
1681090228569:library(tidyverse)
1681090234290:library(tidyverse)
