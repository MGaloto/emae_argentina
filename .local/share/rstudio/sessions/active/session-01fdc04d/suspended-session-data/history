emae = na.omit(emae)
emae = convert_integer(emae)
dataframe = emae %>%
mutate_if(is.numeric, round)
} else {
emae = emae[4:nrow(emae) - 2,]
colnames(emae) = emae[1,]
emae = emae[4:nrow(emae), 3:ncol(emae)]
emae = na.omit(emae)
emae = convert_integer(emae)
colnames(emae) = c("agricultura_ganaderia",
"pesca",
"mineria",
"industria_manufactura",
"electricidad_gas_agua",
"construccion",
"comercio",
"hoteles_restaurantes",
"transporte_comunicaciones",
"intermediacion_financiera",
"inmobiliarias",
"adm_publica",
"enseñanza",
"serv_sociales_salud",
"serv_comunitarios_sociales",
"impuestos_neto_subsidios")
periodos = seq(as.Date("2004/1/1"),
by = "month",
length.out = nrow(emae))
emae$periodos = as.Date(periodos)
emae$year     = year(emae$periodos)
emae$Mes      = as.numeric(substr(emae$periodos, 6 , 7))
dataframe = emae %>%
mutate_if(is.numeric, round)
}
return(dataframe)
}
url_sectors = "https://www.indec.gob.ar/ftp/cuadros/economia/sh_emae_actividad_base2004.xls"
url = "https://www.indec.gob.ar/ftp/cuadros/economia/sh_emae_mensual_base2004.xls"
df_emae = get_dataframe(url = url, time_out = 20000)
dataframe = get_dataframe(url = url_sectors, time_out = 20000)
View(df_emae)
GET(url,
timeout(20000),
write_disk(file <- tempfile(fileext = ".xls")))
library(tidyverse)
library(lubridate)
library(readxl)
library(readr)
library(httr)
convert_integer = function(dataframe) {
dataframe[ , c(1:(ncol(dataframe)))] = apply(dataframe[ , c(1:(ncol(dataframe)))], 2,
function(x) as.numeric(as.character(x)))
return(
dataframe
)
}
GET(url,
timeout(20000),
write_disk(file <- tempfile(fileext = ".xls")))
emae = read_excel(file)
url = "https://www.indec.gob.ar/ftp/cuadros/economia/sh_emae_mensual_base2004.xls"
GET(url,
timeout(20000),
write_disk(file <- tempfile(fileext = ".xls")))
emae = read_excel(file)
get_dataframe = function(url, time_out){
GET(url,
timeout(time_out),
write_disk(file <- tempfile(fileext = ".xls")))
read_excel(file)
}
emae = get_dataframe(url, 200000)
get_dataframe = function(url, time_out){
GET(url,
timeout(time_out),
write_disk(file <- tempfile(fileext = ".xls")))
read_excel(file)
}
emae = get_dataframe(url, 200000)
emae = emae[7:nrow(emae) - 2,3]
emae = get_dataframe(url, 200000)
emae = emae[6:nrow(emae) - 2,3]
View(emae)
# "bootstrap", "cerulean", "cosmo", "darkly", "flatly", "journal", "lumen", "", "", "spacelab",
# logo: https://convert-my-image.com/ImageConverter
library(flexdashboard)
library(dplyr)
library(tidyverse)
library(highcharter)
library(rlang)
source('download_emae.R')
#dataframe = readxl::read_excel("df.xlsx")
colnames(dataframe)[13] = "ensenianza"
interanual <-    function(df, val)  {
valueuno = pull((df[,c(val)]))[nrow(df) - 12]
valuedos = pull((df[,c(val)]))[nrow(df)]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
return(porcentaje)
}
most_interanual = function(df){
col_names = colnames(df)[1:16]
counter = 0
values = c()
names = c()
for (col in col_names){
counter = counter + 1
valueuno = pull((df[,c(col)]))[nrow(df) - 12]
valuedos = pull((df[,c(col)]))[nrow(df)]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
values[counter] <- porcentaje
names[counter] <- col
}
dtf = data.frame(names,values)
return(dtf)
}
interanual_array <-    function(df, val)  {
valueuno = pull((df[,c(val)]))[nrow(df) - 12]
valuedos = pull((df[,c(val)]))[nrow(df)]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
return(porcentaje)
}
interanual_array <-    function(df, val)  {
vector_final = c()
counter = 0
for (i in 1:3) {
valueuno = pull((df[,c(val)]))[nrow(df) - (12 + counter)]
valuedos = pull((df[,c(val)]))[nrow(df) - counter]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
counter = counter + 1
vector_final[counter] = porcentaje
}
value_final = vector_final[1] - vector_final[2] - vector_final[3]
return(value_final)
}
tibble_economy = function(df, colnames){
colname = c()
value = c()
counter = 0
for (col in colnames){
counter = counter + 1
colname[counter] = col
value[counter] = interanual_array(df, col)
}
return(tibble(actividad = colname, numbers = value))
}
valuebox = function(porcentaje, name, mensaje, color, font) {
valueBox(
value = tags$p(paste0(porcentaje, ' %'),
style = color),
icon = "fa-line-chart",
caption = tags$p(paste0(mensaje, ' variacion Interanual: ',str_to_title(gsub("_", " ", name))),
style = font),
color =  color)
}
valueboxTwo = function(descripcion, name, color, font, font_letter,icon) {
valueBox(
value = tags$p(str_to_title(gsub("_", " ", name)),
style = font_letter),
icon = icon,
caption = tags$p(paste0(str_to_title(gsub("_", " ", descripcion))),
style = font),
color =  color)
}
time_serie_plot = function(data, name){
highcharter::hchart(
data, type = "line",  highcharter::hcaes(x = as.Date(periodos), y = !!sym(name)),
color = "rgba(29, 53, 87, 1)",
name = str_to_title(gsub("_", " ", name)),
id = "trend",
showInLegend = TRUE) %>%
highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Base: {point.y}") %>%
highcharter::hc_plotOptions(
line = list(
color = "blue",
marker = list(
fillColor = "white",
lineWidth = 2,
radius=1,
lineColor = NULL
)
)
) %>%
highcharter::hc_legend(
layout = "vertical",
verticalAlign = "top",
align = "right",
floating = TRUE
) %>%
highcharter::hc_xAxis(
title = list(text = ""),
gridLineWidth = 0,
dateTimeLabelFormats = list(day = '%d/%m/%Y'),
type = "datetime",
reversed = FALSE
) %>%
highcharter::hc_yAxis(
title = list(text = str_to_title(gsub("_", " ", name))),
gridLineWidth = 0,
reversed = FALSE
) %>%
highcharter::hc_caption(
text = paste0("Serie Temporal de EMAE. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
highcharter::hc_tooltip(
crosshairs = TRUE,
backgroundColor = "#F0F0F0",
shared = TRUE,
borderWidth = 5
)
}
dtfs = most_interanual(dataframe)
data = tibble_economy(df= dataframe, colnames = colnames(dataframe)[c(1:16, 20)])
colnames(dataframe)
View(dtfs)
View(data)
View(dataframe)
Sys.time()
as.POSIXlt(Sys.time(), tz = "UTC")
as.POSIXct.Date(Sys.time(), tz = "UTC")
as.POSIXlt(Sys.time(), tz = "UTC")
as.POSIXlt(Sys.time(), tz = "UTC - 3")
as.POSIXlt(Sys.time(), tz = "UTC-3")
as.POSIXlt(Sys.time(), tz = "UTC")
as.POSIXct(Sys.time(), tz = "UTC")
as.POSIXct(Sys.time(), tz = "UTC", format="%m/%d/%Y %H:%M:%S")
as.POSIXct(Sys.time(), tz = "UTC")
as.POSIXct(Sys.time(), tz = "UTC")
Sys.time()
Sys.time()
library(flexdashboard)
library(dplyr)
library(tidyverse)
library(highcharter)
library(rlang)
str_to_title("hola")
# "bootstrap", "cerulean", "cosmo", "darkly", "flatly", "journal", "lumen", "", "", "spacelab",
# logo: https://convert-my-image.com/ImageConverter
library(flexdashboard)
library(dplyr)
library(tidyverse)
library(highcharter)
library(rlang)
source('download_emae.R')
#dataframe = readxl::read_excel("df.xlsx")
colnames(dataframe)[13] = "ensenianza"
interanual <-    function(df, val)  {
valueuno = pull((df[,c(val)]))[nrow(df) - 12]
valuedos = pull((df[,c(val)]))[nrow(df)]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
return(porcentaje)
}
most_interanual = function(df){
col_names = colnames(df)[1:16]
counter = 0
values = c()
names = c()
for (col in col_names){
counter = counter + 1
valueuno = pull((df[,c(col)]))[nrow(df) - 12]
valuedos = pull((df[,c(col)]))[nrow(df)]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
values[counter] <- porcentaje
names[counter] <- col
}
dtf = data.frame(names,values)
return(dtf)
}
interanual_array <-    function(df, val)  {
valueuno = pull((df[,c(val)]))[nrow(df) - 12]
valuedos = pull((df[,c(val)]))[nrow(df)]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
return(porcentaje)
}
interanual_array <-    function(df, val)  {
vector_final = c()
counter = 0
for (i in 1:3) {
valueuno = pull((df[,c(val)]))[nrow(df) - (12 + counter)]
valuedos = pull((df[,c(val)]))[nrow(df) - counter]
porcentaje = round(((valuedos - valueuno) / valueuno ) * 100,1)
counter = counter + 1
vector_final[counter] = porcentaje
}
value_final = vector_final[1] - vector_final[2] - vector_final[3]
return(value_final)
}
tibble_economy = function(df, colnames){
colname = c()
value = c()
counter = 0
for (col in colnames){
counter = counter + 1
colname[counter] = col
value[counter] = interanual_array(df, col)
}
return(tibble(actividad = colname, numbers = value))
}
valuebox = function(porcentaje, name, mensaje, color, font) {
valueBox(
value = tags$p(paste0(porcentaje, ' %'),
style = color),
icon = "fa-line-chart",
caption = tags$p(paste0(mensaje, ' variacion Interanual: ',str_to_title(gsub("_", " ", name))),
style = font),
color =  color)
}
valueboxTwo = function(descripcion, name, color, font, font_letter,icon) {
valueBox(
value = tags$p(str_to_title(gsub("_", " ", name)),
style = font_letter),
icon = icon,
caption = tags$p(paste0(str_to_title(gsub("_", " ", descripcion))),
style = font),
color =  color)
}
time_serie_plot = function(data, name){
highcharter::hchart(
data, type = "line",  highcharter::hcaes(x = as.Date(periodos), y = !!sym(name)),
color = "rgba(29, 53, 87, 1)",
name = str_to_title(gsub("_", " ", name)),
id = "trend",
showInLegend = TRUE) %>%
highcharter::hc_tooltip(crosshairs = TRUE, pointFormat = "Base: {point.y}") %>%
highcharter::hc_plotOptions(
line = list(
color = "blue",
marker = list(
fillColor = "white",
lineWidth = 2,
radius=1,
lineColor = NULL
)
)
) %>%
highcharter::hc_legend(
layout = "vertical",
verticalAlign = "top",
align = "right",
floating = TRUE
) %>%
highcharter::hc_xAxis(
title = list(text = ""),
gridLineWidth = 0,
dateTimeLabelFormats = list(day = '%d/%m/%Y'),
type = "datetime",
reversed = FALSE
) %>%
highcharter::hc_yAxis(
title = list(text = str_to_title(gsub("_", " ", name))),
gridLineWidth = 0,
reversed = FALSE
) %>%
highcharter::hc_caption(
text = paste0("Serie Temporal de EMAE. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
highcharter::hc_tooltip(
crosshairs = TRUE,
backgroundColor = "#F0F0F0",
shared = TRUE,
borderWidth = 5
)
}
dtfs = most_interanual(dataframe)
data = tibble_economy(df= dataframe, colnames = colnames(dataframe)[c(1:16, 20)])
#as.POSIXct(Sys.time(), tz = "UTC")
last_update = Sys.time()
dtfs %>%
arrange(desc(values)) %>%
hchart('column', hcaes(x = names, y = values),
showInLegend = F,
maxSize = "15%",
dataLabels = list(enabled = TRUE,
format = '{point.y} %')) %>%
hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
hc_legend(enabled = FALSE) %>%
highcharter::hc_plotOptions(
line = list(
color = "blue",
marker = list(
fillColor = "white",
lineWidth = 2,
radius = 1,
lineColor = NULL
)
)
) %>%
highcharter::hc_tooltip(crosshairs = TRUE,
pointFormat = "Variacion: {point.y} %",
backgroundColor = "#F0F0F0",
shared = TRUE,
borderWidth = 5) %>%
highcharter::hc_caption(
text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
highcharter::hc_xAxis(
title = list(text = " "),
gridLineWidth = 0,
reversed = FALSE
) %>%
highcharter::hc_yAxis(
title = list(text = " "),
gridLineWidth = 0,
reversed = FALSE
)
dtfs %>%
arrange(desc(values)) %>%
hchart('column', hcaes(x = names, y = values),
showInLegend = F,
maxSize = "15%",
dataLabels = list(enabled = TRUE,
format = '{point.y} %')) %>%
hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
hc_legend(enabled = FALSE) %>%
highcharter::hc_plotOptions(
line = list(
color = "blue",
marker = list(
fillColor = "white",
lineWidth = 2,
radius = 1,
lineColor = NULL
)
)
) %>%
highcharter::hc_tooltip(crosshairs = TRUE,
pointFormat = "Variacion: {point.y} %",
backgroundColor = "#F0F0F0",
shared = TRUE,
borderWidth = 5) %>%
highcharter::hc_caption(
text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec."))
dtfs %>%
arrange(desc(values)) %>%
hchart('column', hcaes(x = names, y = values),
showInLegend = F,
maxSize = "15%",
dataLabels = list(enabled = TRUE,
format = '{point.y} %')) %>%
hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
hc_legend(enabled = FALSE) %>%
highcharter::hc_plotOptions(
line = list(
color = "blue",
marker = list(
fillColor = "white",
lineWidth = 2,
radius = 1,
lineColor = NULL
)
)
) %>%
highcharter::hc_tooltip(crosshairs = TRUE,
pointFormat = "Variacion: {point.y} %",
backgroundColor = "#F0F0F0",
shared = TRUE,
borderWidth = 5) %>%
highcharter::hc_caption(
text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
highcharter::hc_xAxis(
title = list(text = " "),
gridLineWidth = 0,
reversed = FALSE
) %>%
highcharter::hc_yAxis(
title = list(text = " "),
gridLineWidth = 0,
reversed = FALSE
)
?hc_xAxis
dtfs %>%
arrange(desc(values)) %>%
hchart('column', hcaes(x = names, y = values),
showInLegend = F,
maxSize = "15%",
dataLabels = list(enabled = TRUE,
format = '{point.y} %')) %>%
hc_colorAxis(stops = color_stops(18, rev(RColorBrewer::brewer.pal(8, 'YlOrRd'))))  %>%
hc_legend(enabled = FALSE) %>%
highcharter::hc_plotOptions(
line = list(
color = "blue",
marker = list(
fillColor = "white",
lineWidth = 2,
radius = 1,
lineColor = NULL
)
)
) %>%
highcharter::hc_tooltip(crosshairs = TRUE,
pointFormat = "Variacion: {point.y} %",
backgroundColor = "#F0F0F0",
shared = TRUE,
borderWidth = 5) %>%
highcharter::hc_caption(
text = paste0("Variacion Interanual. Año Base Enero 2004. <br>Fuente: Indec.")) %>%
highcharter::hc_xAxis(
label = list(style=list(textTransform = "uppercase")),
title = list(text = " "),
gridLineWidth = 0,
reversed = FALSE
) %>%
highcharter::hc_yAxis(
title = list(text = " "),
gridLineWidth = 0,
reversed = FALSE
)
library(flexdashboard)
library(dplyr)
library(tidyverse)
library(flexdashboard)
library(dplyr)
library(tidyverse)
library(tidyverse)
